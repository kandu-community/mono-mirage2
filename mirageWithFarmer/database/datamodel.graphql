type Post {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean! @default(value: "false")
  title: String!
  text: String!
  author: User!
}

type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  name: String!
  posts: [Post!]!
  personalDetails: PersonalDetails
  address: Address
  farmingActivities: FarmingActivities
  farm: Farm
  role: Role @default(value: "FARMER")
}

type PersonalDetails {
  firstName: String
  lastName: String
  cell: String
  landLine: String
  idSA: String
  person: User!
}

type Address {
  street: String
  area: String
  postalCode: String
  province: String
  resident: User!
}

type FarmingActivities {
  category: String!
  shortDescription: String
  cultivationApproach: String
  selling: SalesCatogories
  farmer: User!
}

type SalesCatogories {
  crops: Boolean
  livestock: Boolean
  products: Boolean
  seeds: Boolean
  distributors: Boolean
}


type Farm {
  id: ID! @unique
  name: String
  totalLand: Int!
  cultivatedLand: Int!
  shareLocation: Boolean!
  gpsPoints: Location!
  farmersAssociations: String
  area: String
  post_code: Int
  short_description: String
  long_description: String
  website: String
  visible_ofn: Boolean
  activities: String
  cooperative: Boolean
  date_started: DateTime
  soil_structure: String
  soil_ph: String
  methodz: String
  erosion_control: String
  water_source: String
  water_storage: String
  irrigation: String
  fertilizer: String 
  farmer: User
  crops: [Crop!]! @relation(name: "FarmCrops")
  products: [Product!]! @relation(name: "FarmProducts")
  seeds: [Seed!]! @relation(name: "FarmSeeds")
  distributors: [Distributor!]! @relation(name: "FarmDistributors")
  support: [Support!]! @relation(name: "FarmSupport")
}



type Crop {
  id: ID! @unique
  category: CropCategory!
  name: String!
  description: String!
  spacing: String!
  squareMeters: Int!
  harvestWindow: HarvestWindow!
  imageCrop: String
  imageName: String
  farm: Farm! @relation(name: "FarmCrops")
}


    






  type Seed { 
    id: ID! @unique
    category: CropCategory!
    name: String!
    description: String!
    unit: String
    stockLevel: Float
    price: Float
    harvestDate: DateTime!
    farm: Farm! @relation(name: "FarmSeeds")
 }






  type Distributor {
    id: ID! @unique
    name: String
    phone: String
    ownerDriver: Boolean
    vehicleMake: String
    vehicleType: String
    registration: String
    description: String
    roadworthy: String
    driverLicense: String
    vehicleLicense: String
    imaSrc: String
    imaName: String
    imaSrctoo: String
    imaNametoo: String
    farm: Farm! @relation(name: "FarmDistributors")
  }






type _ProduceTable {
  name: String
  produce: [_Produce!]! @relation(name: "SeedData")
}

type _Produce {
  name: String! @unique
  type: CropCategory!
  # spacing in mm
  spacing: Int
  plantsPerM: Float
  group: _ProduceTable! @relation(name: "SeedData")
}

type Location {
  lat: Float!
  lng: Float!
}

type Product {
  id: ID! @unique
  name: String!
  productype: String!
  description: String
  unit: String
  stockLevel: Float
  price: Float
  imageSrc: String
  imageName: String
  imageSrctoo: String
  imageNametoo: String
  farm: Farm! @relation(name: "FarmProducts")
}


type Support {
  id: ID! @unique
  date: DateTime!
  challenge: String!
  challengetype: String!
  escalation: String
  description: String
  resolve: Boolean
  notes: String
  image1Src: String
  image1Name: String
  image2Src: String
  image2Name: String
  farm: Farm! @relation(name: "FarmSupport")
}


# eg. datetime: "2015-11-22"
type HarvestWindow {
  from: DateTime!
  to: DateTime!
}

enum CropCategory {
  Vegetable
  Fruit
  Herb
  Medicine
}

enum Role {
  ADMIN
  CUSTOMER
  FARMER
}
